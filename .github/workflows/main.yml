name: Heroku deployment
on: [push, workflow_dispatch]

env:
  NETCORESDK_VERSION: "6.0"
  ASPNETCORE_VERSION: 6.0-bullseye-slim
  GITHUB_USER: ${{secrets.NUGET_USER}}
  GITHUB_PAT: ${{secrets.NUGET_PAT}}
  IMAGE_TAG: stella-backend:latest
  REF_NAME: ${{ github.ref_name }}.${{ github.sha }}
  HEROKU_IMAGE_TAG: "registry.heroku.com/${{vars.HEROKU_APP}}/web"
  HEROKU_API_KEY: ${{secrets.HEROKU_API_KEY}}
  HEROKU_USER: ${{secrets.HEROKU_USER}}
  HEROKU_REGISTRY: "registry.heroku.com"
  HEROKU_APP: ${{vars.HEROKU_APP}}

jobs:
  Push-to-heroku:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build Image
        run: |
          docker build . -f ./Dockerfile.backend -t ${{env.IMAGE_TAG}} --build-arg "NETCORESDK_VERSION=${{env.NETCORESDK_VERSION}}" \
          --build-arg "ASPNETCORE_VERSION=${{env.ASPNETCORE_VERSION}}" --build-arg "GITHUB_USER=${{env.GITHUB_USER}}" \
          --build-arg "GITHUB_PAT=${{env.GITHUB_PAT}}"

      - name: Tag image to heroku
        run: |
          docker tag ${{env.IMAGE_TAG}} ${{env.HEROKU_IMAGE_TAG}}
          docker tag ${{env.IMAGE_TAG}} ${{env.HEROKU_IMAGE_TAG}}:${{env.REF_NAME}}
        
      - name: Install heroku cli
        run: curl https://cli-assets.heroku.com/install.sh | sh

      - name: Login into heroku, push and release
        env:
          HEROKU_API_KEY: ${{env.HEROKU_API_KEY}}
        run: |
          heroku container:login
          docker push ${{env.HEROKU_IMAGE_TAG}}
          docker push ${{env.HEROKU_IMAGE_TAG}}:${{env.REF_NAME}}
          heroku container:release web --app ${{env.HEROKU_APP}}
